HOSTNAME = "plamen-vagrant"
CPUS = 2
MEMORY = 1024
INTERFACE = "eno1"
NODES = 2

VAULT_PASS_FILE = "#{ENV['HOME']}/.vault_passwd"

Vagrant.configure("2") do |config|

    config.vm.box = "centos/6"
    config.vm.network "public_network", bridge: "#{INTERFACE}"
    config.vm.synced_folder '.', '/vagrant', disabled: true

    VAGRANT_ROOT = File.dirname(__FILE__)
    ANSIBLE_RAW_SSH_ARGS = []

    (1..NODES).each do |i|

        n = i if NODES > 1
        ANSIBLE_RAW_SSH_ARGS << "-o IdentityFile=#{VAGRANT_ROOT}/.vagrant/machines/#{HOSTNAME}#{n}/virtualbox/private_key"

        config.vm.define "#{HOSTNAME}#{n}" do |node|

            node.vm.hostname = "#{HOSTNAME}#{n}"

            node.vm.provider "virtualbox" do |vb|

                vb.gui = false
                vb.name = node.vm.hostname

                # General
                vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
                vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]

                # System
                vb.memory = MEMORY
                vb.customize ["modifyvm", :id, "--boot1", "disk"]
                vb.customize ["modifyvm", :id, "--boot2", "dvd"]
                vb.customize ["modifyvm", :id, "--boot3", "none"]
                vb.customize ["modifyvm", :id, "--boot4", "none"]
                vb.customize ["modifyvm", :id, "--chipset", "ich9"]
                vb.customize ["modifyvm", :id, "--mouse", "ps2"]
                vb.customize ["modifyvm", :id, "--apic", "on"]
                vb.customize ["modifyvm", :id, "--rtcuseutc", "on"]
                vb.cpus = CPUS
                vb.customize ["modifyvm", :id, "--pae", "on"]
                vb.customize ["modifyvm", :id, "--paravirtprovider", "default"]
                vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
                vb.customize ["modifyvm", :id, "--vtxvpid", "on"]
                vb.customize ["modifyvm", :id, "--vtxux", "on"]

                # Display
                vb.customize ["modifyvm", :id, "--vram", "16"]
                vb.customize ["modifyvm", :id, "--accelerate3d", "on"]

                # Storage
                vb.customize ["storagectl", :id, "--name", "IDE", "--controller", "ICH6", "--hostiocache", "on"]
                vb.customize ["storageattach", :id, "--storagectl", "IDE", "--port", "0", "--device", "0", "--type", "hdd", "--nonrotational", "on"]

                # Audio
                vb.customize ["modifyvm", :id, "--audio", "none"]

                # Network
                vb.customize ["modifyvm", :id, "--nictype1", "82540EM"]

                # USB
                vb.customize ["modifyvm", :id, "--usb", "on", "--usbehci", "on"]
            end

            # Enable remote root access
            node.vm.provision "shell", inline: <<-SHELL
                sed -ie 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
                service sshd reload
                echo "Server reporting for duty."
            SHELL

            # Ansible provisioner
            if i == NODES
                node.vm.provision "ansible" do |ansible|
                    ansible.limit = [ "newcluster", "localhost" ]
                    ansible.playbook = "../../install_new_host.yml"
                    ansible.inventory_path = "../../inventory/test/hosts_newcluster"
                    ansible.sudo = true
                    ansible.raw_ssh_args = ANSIBLE_RAW_SSH_ARGS
                    if File.exist?(VAULT_PASS_FILE)
                        ansible.vault_password_file = VAULT_PASS_FILE
                    else
                        ansible.ask_vault_pass = true
                    end
                end
            end
        end
    end
end
# vim: ft=ruby:ai:ts=4:sw=4:sts=4
